fragment_downloaded_cb({"url": "gvariant-varargs.html#gvariant-", "fragment": "GVariant \nCharacters r \nUpon encountering a in front of a type string g_variant_new takes a non NULL pointer to a GVariant and uses its value directly instead of collecting arguments to create the value. The provided GVariant must have a type that matches the type string following the is the same as ie take a GVariant of any type is the same as ie take a GVariant of any basic type r is the same as r ie take a GVariant of any tuple type \nUpon encountering a in front of a type string g_variant_get takes a pointer to a GVariant ie a GVariant and sets it to a new reference to a GVariant containing the value instead of deconstructing the value into C types in the usual way NULL can be given to ignore the value. and r are handled in a way analogous to what is stated above. \nYou can always use as an alternative to r or any use of Using the other characters where possible is recommended however due to the improvements in type safety and code self documentation. \n"});
fragment_downloaded_cb({"url": "python/string_utils.html#glibstr_match_string", "fragment": "GLib.str_match_string \nChecks if a search conducted for search_term should match potential_hit. \nThis function calls GLib.str_tokenize_and_fold on both search_term and potential_hit. ASCII alternates are never taken for search_term but will be taken for potential_hit according to the value of accept_alternates. \nA hit occurs when each folded token in search_term is a prefix of a folded token from potential_hit. \nDepending on how you re performing the search it will typically be faster to call GLib.str_tokenize_and_fold on each string in your corpus and build an index on the returned folded tokens then call GLib.str_tokenize_and_fold on the search term and perform lookups into that index. \nAs some examples searching for fred would match the potential hit Smith Fred and also Fr d ric Searching for Fr d would match Fr d ric but not Frederic due to the one directional nature of accent matching Searching fo would match Foo and Bar Foo Baz but not SFO because no word as fo as a prefix \n"});
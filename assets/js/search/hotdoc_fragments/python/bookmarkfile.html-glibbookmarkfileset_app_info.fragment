fragment_downloaded_cb({"url": "python/bookmarkfile.html#glibbookmarkfileset_app_info", "fragment": "GLib.BookmarkFile.set_app_info \nSets the meta data of application name inside the list of applications that have registered a bookmark for uri inside bookmark. \nYou should rarely use this function use GLib.BookmarkFile.add_application and GLib.BookmarkFile.remove_application instead. \nname can be any UTF encoded string used to identify an application. exec can have one of these two modifiers f which will be expanded as the local file name retrieved from the bookmark s URI u which will be expanded as the bookmark s URI. The expansion is done automatically when retrieving the stored command line using the GLib.BookmarkFile.get_app_info function. count is the number of times the application has registered the bookmark if is the current registration count will be increased by one if is the application with name will be removed from the list of registered applications. stamp is the Unix time of the last registration if it is the current time will be used. \nIf you try to remove an application by setting its registration count to zero and no bookmark for uri is found False is returned and error is set to GLib.BookmarkFileError.uri_not_found similarly in the event that no application name has registered a bookmark for uri False is returned and error is set to GLib.BookmarkFileError.app_not_registered. Otherwise if no bookmark for uri is found one is created. \n"});
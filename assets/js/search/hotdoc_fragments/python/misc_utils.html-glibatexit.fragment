fragment_downloaded_cb({"url": "python/misc_utils.html#glibatexit", "fragment": "GLib.atexit \nSpecifies a function to be called at normal program termination. \nSince GLib on Windows GLib.atexit actually is a preprocessor macro that maps to a call to the atexit function in the C library. This means that in case the code that calls GLib.atexit i.e. atexit is in a DLL the function will be called when the DLL is detached from the program. This typically makes more sense than that the function is called when the GLib DLL is detached which happened earlier when GLib.atexit was a function in the GLib DLL. \nThe behaviour of atexit in the context of dynamically loaded modules is not formally specified and varies wildly. \nOn POSIX systems calling GLib.atexit or atexit in a dynamically loaded module which is unloaded before the program terminates might well cause a crash at program exit. \nSome POSIX systems implement atexit like Windows and have each dynamically loaded module maintain an own atexit chain that is called when the module is unloaded. \nOn other POSIX systems before a dynamically loaded module is unloaded the registered atexit functions if any residing in that module are called regardless where the code that registered them resided. This is presumably the most robust approach. \nAs can be seen from the above for portability it s best to avoid calling GLib.atexit or atexit except in the main executable of a program. \n"});
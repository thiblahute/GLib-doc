fragment_downloaded_cb({"url": "python/gregex.html#glibregex_split_simple", "fragment": "GLib.regex_split_simple \nBreaks the string on the pattern and returns an array of the tokens. If the pattern contains capturing parentheses then the text for each of the substrings will also be returned. If the pattern does not match anywhere in the string then the whole string is returned as the first token. \nThis function is equivalent to GLib.Regex.split but it does not require to compile the pattern with GLib.Regex.new avoiding some lines of code when you need just to do a split without extracting substrings capture counts and so on. \nIf this function is to be called on the same pattern more than once it s more efficient to compile the pattern once with GLib.Regex.new and then use GLib.Regex.split. \nAs a special case the result of splitting the empty string is an empty vector not a vector containing a single string. The reason for this special case is that being able to represent a empty vector is typically more useful than consistent handling of empty elements. If you do need to represent empty elements you ll need to check for the empty string before calling this function. \nA pattern that can match empty strings splits string into separate characters wherever it matches the empty string between characters. For example splitting ab c using as a separator s you will get a b and c \n"});
fragment_downloaded_cb({"url": "python/gvariant-varargs.html#maybe-types", "fragment": "Maybe Types \nCharacters m \nMaybe types are handled in two separate ways depending on the format string that follows the m The method that is used currently depends entirely on the character immediately following the m \nThe first way is used with format strings starting with a s o g v r or In all of these cases for non maybe types g_variant_new takes a pointer to a non NULL value and g_variant_get returns by reference a non NULL pointer. When any of these format strings are prefixed with an m the type of arguments that are collected does not change in any way but NULL becomes a permissable value to indicate the Nothing case. \nNote that the special exception introduced in the array section for constructing empty arrays is ignored here. Using a NULL pointer with the format string mas constructs the Nothing value not an empty array. \nThe second way is used with all other format strings. For g_variant_new an additional gboolean argument is collected and for g_variant_get an additional gboolean Following this argument the arguments that are normally collected for the equivalent non maybe type will be collected. \nIf FALSE is given to g_variant_new then the Nothing value is constructed and the collected arguments are ignored. Otherwise if TRUE was given the arguments are used in the normal way to create the Just value. \nIf NULL is given to g_variant_get then the value is ignored. If a non NULL pointer is given then it is used to return by reference whether the value was Just. In the case that the value was Just the gboolean will be set to TRUE and the value will be stored in the arguments in the usual way. In the case that the value was Nothing the gboolean will be set to FALSE and the arguments will be collected in the normal way but have their values set to binary zero. \n"});
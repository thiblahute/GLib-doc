fragment_downloaded_cb({"url": "c/regex-syntax.html#simple-assertions", "fragment": "Simple assertions \nThe final use of backslash is for certain simple assertions. An assertion specifies a condition that has to be met at a particular point in a match without consuming any characters from the string. The use of subpatterns for more complicated assertions is described below. The backslashed assertions are \nThese assertions may not appear in character classes but note that b has a different meaning namely the backspace character inside a character class \nA word boundary is a position in the string where the current character and the previous character do not both match w or W i.e. one matches w and the other matches W or the start or end of the string if the first or last character matches w respectively. \nThe A Z and z assertions differ from the traditional circumflex and dollar described in the next section in that they only ever match at the very start and end of the string whatever options are set. Thus they are independent of multiline mode. These three assertions are not affected by the G_REGEX_MATCH_NOTBOL or G_REGEX_MATCH_NOTEOL options which affect only the behaviour of the circumflex and dollar metacharacters. However if the start_position argument of a matching function is non zero indicating that matching is to start at a point other than the beginning of the string A can never match. The difference between Z and z is that Z matches before a newline at the end of the string as well at the very end whereas z matches only at the end. \nThe G assertion is true only when the current matching position is at the start point of the match as specified by the start_position argument to the matching functions. It differs from A when the value of startoffset is non zero. \nNote however that the interpretation of G as the start of the current match is subtly different from Perl s which defines it as the end of the previous match. In Perl these can be different when the previously matched string was empty. \nIf all the alternatives of a pattern begin with G the expression is anchored to the starting match position and the anchored flag is set in the compiled regular expression. \n"});
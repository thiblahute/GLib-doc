fragment_downloaded_cb({"url": "c/messages.html#g_log_structured1", "fragment": "g_log_structured \nLog a message with structured data. The message will be passed through to the log writer set by the application using g_log_set_writer_func. If the message is fatal i.e. its log level is G_LOG_LEVEL_ERROR the program will be aborted at the end of this function. \nThe structured data is provided as key value pairs where keys are UTF strings and values are arbitrary pointers typically pointing to UTF strings but that is not a requirement. To pass binary non nul terminated structured data use g_log_structured_array. The keys for structured data should follow the systemd journal fields specification. It is suggested that custom keys are namespaced according to the code which sets them. For example custom keys from GLib all have a GLIB_ prefix. \nThe log_domain will be converted into a GLIB_DOMAIN field. log_level will be converted into a PRIORITY field. The format string will have its placeholders substituted for the provided values and be converted into a MESSAGE field. \nOther fields you may commonly want to pass into this function \nNote that CODE_FILE CODE_LINE and CODE_FUNC are automatically set by the logging macros G_DEBUG_HERE g_message g_warning g_critical g_error etc if the symbols G_LOG_USE_STRUCTURED is defined before including glib.h. \nFor example \nNote that each MESSAGE_ID must be uniquely and randomly generated. If adding a MESSAGE_ID consider shipping a message catalog with your software. \nTo pass a user data pointer to the log writer function which is specific to this logging call you must use g_log_structured_array and pass the pointer as a field with GLogField.length set to zero otherwise it will be interpreted as a string. \nFor example \nNote also that even if no other structured fields are specified there must always be a MESSAGE key before the format string. The MESSAGE format pair has to be the last of the key value pairs and MESSAGE is the only field for which printf style formatting is supported. \nThe default writer function for stdout and stderr will automatically append a new line character after the message so you should not add one manually to the format string. \n"});
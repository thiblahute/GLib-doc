fragment_downloaded_cb({"url": "c/macros_misc.html#g_autoptr1", "fragment": "g_autoptr \nHelper to declare a pointer variable with automatic cleanup. \nThe variable is cleaned up in a way appropriate to its type when the variable goes out of scope. The type must support this. \nThis feature is only supported on GCC and clang. This macro is not defined on other compilers and should not be used in programs that are intended to be portable to those compilers. \nThis is meant to be used to declare pointers to types with cleanup functions. The type of the variable is a pointer to TypeName. You must not add your own \nThis macro can be used to avoid having to do explicit cleanups of local variables when exiting functions. It often vastly simplifies handling of error conditions removing the need for various tricks such as goto out or repeating of cleanup code. It is also helpful for non error cases. \nConsider the following example \nYou must initialise the variable in some way either by use of an initialiser or by ensuring that it is assigned to unconditionally before it goes out of scope. \nSee also g_auto g_autofree and g_steal_pointer. \n"});
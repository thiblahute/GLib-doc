fragment_downloaded_cb({"url": "c/regex-syntax.html#internal-option-setting", "fragment": "Internal option setting \nThe settings of the G_REGEX_CASELESS G_REGEX_MULTILINE G_REGEX_MULTILINE and G_REGEX_EXTENDED options can be changed from within the pattern by a sequence of Perl style option letters enclosed between and The option letters are \nFor example im sets caseless multiline matching. It is also possible to unset these options by preceding the letter with a hyphen and a combined setting and unsetting such as im sx which sets G_REGEX_CASELESS and G_REGEX_MULTILINE while unsetting G_REGEX_DOTALL and G_REGEX_EXTENDED is also permitted. If a letter appears both before and after the hyphen the option is unset. \nWhen an option change occurs at top level that is not inside subpattern parentheses the change applies to the remainder of the pattern that follows. \nAn option change within a subpattern see below for a description of subpatterns affects only that part of the current pattern that follows it so \nmatches abc and aBc and no other strings assuming G_REGEX_CASELESS is not used By this means options can be made to have different settings in different parts of the pattern. Any changes made in one alternative do carry on into subsequent branches within the same subpattern. For example \nmatches ab aB c and C even though when matching C the first branch is abandoned before the option setting. This is because the effects of option settings happen at compile time. There would be some very weird behaviour otherwise. \nThe options G_REGEX_UNGREEDY and G_REGEX_EXTRA and G_REGEX_DUPNAMES can be changed in the same way as the Perl compatible options by using the characters U X and J respectively. \n"});
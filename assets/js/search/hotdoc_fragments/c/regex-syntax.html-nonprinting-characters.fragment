fragment_downloaded_cb({"url": "c/regex-syntax.html#nonprinting-characters", "fragment": "Non printing characters \nA second use of backslash provides a way of encoding non printing characters in patterns in a visible manner. There is no restriction on the appearance of non printing characters apart from the binary zero that terminates a pattern but when a pattern is being prepared by text editing it is usually easier to use one of the following escape sequences than the binary character it represents \nThe precise effect of cx is as follows if x is a lower case letter it is converted to upper case. Then bit of the character hex is inverted. Thus cz becomes hex A but c becomes hex B while c becomes hex B. \nAfter x from zero to two hexadecimal digits are read letters can be in upper or lower case Any number of hexadecimal digits may appear between x and but the value of the character code must be less than that is the maximum hexadecimal value is FFFFFFF If characters other than hexadecimal digits appear between x and or if there is no terminating this form of escape is not recognized. Instead the initial x will be interpreted as a basic hexadecimal escape with no following digits giving a character whose value is zero. \nCharacters whose value is less than can be defined by either of the two syntaxes for x. There is no difference in the way they are handled. For example xdc is exactly the same as x dc \nAfter up to two further octal digits are read. If there are fewer than two digits just those that are present are used. Thus the sequence x specifies two binary zeros followed by a BEL character code value Make sure you supply two digits after the initial zero if the pattern character that follows is itself an octal digit. \nThe handling of a backslash followed by a digit other than is complicated. Outside a character class GRegex reads it and any following digits as a decimal number. If the number is less than or if there have been at least that many previous capturing left parentheses in the expression the entire sequence is taken as a back reference. A description of how this works is given later following the discussion of parenthesized subpatterns. \nInside a character class or if the decimal number is greater than and there have not been that many capturing subpatterns GRegex re reads up to three octal digits following the backslash and uses them to generate a data character. Any subsequent digits stand for themselves. For example \nNote that octal values of or greater must not be introduced by a leading zero because no more than three octal digits are ever read. \nAll the sequences that define a single character can be used both inside and outside character classes. In addition inside a character class the sequence b is interpreted as the backspace character hex and the sequences R and X are interpreted as the characters R and X respectively. Outside a character class these sequences have different meanings see below \n"});
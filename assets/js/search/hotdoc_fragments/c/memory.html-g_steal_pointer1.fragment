fragment_downloaded_cb({"url": "c/memory.html#g_steal_pointer1", "fragment": "g_steal_pointer \nSets pp to NULL returning the value that was there before. \nConceptually this transfers the ownership of the pointer from the referenced variable to the caller of the macro ie steals the reference \nThe return value will be properly typed according to the type of pp. \nThis can be very useful when combined with g_autoptr to prevent the return value of a function from being automatically freed. Consider the following example which only works on GCC and clang \nIt can also be used in similar ways for out parameters and is particularly useful for dealing with optional out parameters \nIn the above example the object will be automatically freed in the early error case and also in the case that NULL was given for obj_out. \n"});
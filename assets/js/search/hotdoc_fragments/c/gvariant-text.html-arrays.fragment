fragment_downloaded_cb({"url": "c/gvariant-text.html#arrays", "fragment": "Arrays \nArrays are formed using the same syntax as Python uses for lists which is arguably the term that GVariant should have used Note that unlike Python lists GVariant arrays are statically typed. This has two implications. \nFirst all items in the array must have the same type. Second the type of the array must be known even in the case that it is empty. This means that unless there is some other way to infer it type information will need to be given explicitly for empty arrays. \nThe parser is able to infer some types based on the fact that all items in an array must have the same type. See the examples below \nparses without additional type information as a one item array of signed integers. \nparses similarly as a three item array. \nparses as an array of doubles. This is the most simple case of the type inferencing in action. \ncauses the to also be parsed as a double but the and are still integers \nnothing parses as an array of maybe strings. The presence of nothing clearly implies that the array elements are nullable. \nwill parse properly because the type of the first empty array can be inferred to be equal to the type of the second array both are arrays of strings \nb hello looks odd but will parse properly. See Bytestrings \nAnd some examples of errors \nhello fails to parse due to conflicting types. \nwill fail to parse without additional type information. \n"});
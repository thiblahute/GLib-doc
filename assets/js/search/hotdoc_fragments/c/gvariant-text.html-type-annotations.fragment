fragment_downloaded_cb({"url": "c/gvariant-text.html#type-annotations", "fragment": "Type Annotations \nType annotations allow additional type information to be given to the parser. Depending on the context this type information can change the output of the parser cause an error when parsing would otherwise have succeeded or resolve an error when parsing would have otherwise failed. \nType annotations come in two forms type codes and type keywords. \nType keywords can be seen as more verbose and more legible versions of a common subset of the type codes. The type keywords boolean byte int16 uint16 int32 uint32 handle int64 uint64 double string objectpath and literal signature are each exactly equivalent to their corresponding type code. \nType codes are an at sign followed by a definite GVariant type string. Some examples \nuint32 causes the number to be parsed unsigned instead of signed the default \nu is the same \nobjectpath org gnome xyz creates an object path instead of a normal string \nau specifies the type of the empty array which would not parse otherwise \nms indicates that a string value is meant to have a maybe type \n"});
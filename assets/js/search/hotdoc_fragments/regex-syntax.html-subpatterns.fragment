fragment_downloaded_cb({"url": "regex-syntax.html#subpatterns", "fragment": "Subpatterns \nSubpatterns are delimited by parentheses round brackets which can be nested. Turning part of a pattern into a subpattern does two things \nIt localizes a set of alternatives. For example the pattern cat aract erpillar matches one of the words cat cataract or caterpillar Without the parentheses it would match cataract erpillar or an empty string. \nIt sets up the subpattern as a capturing subpattern. This means that when the whole pattern matches that portion of the string that matched the subpattern can be obtained using g_match_info_fetch Opening parentheses are counted from left to right starting from as subpattern is the whole matched string to obtain numbers for the capturing subpatterns. \nFor example if the string the red king is matched against the pattern \nthe captured substrings are red king red and king and are numbered and respectively. \nThe fact that plain parentheses fulfil two functions is not always helpful. There are often times when a grouping subpattern is required without a capturing requirement. If an opening parenthesis is followed by a question mark and a colon the subpattern does not do any capturing and is not counted when computing the number of any subsequent capturing subpatterns. For example if the string the white queen is matched against the pattern \nthe captured substrings are white queen and queen and are numbered and The maximum number of capturing subpatterns is \nAs a convenient shorthand if any option settings are required at the start of a non capturing subpattern the option letters may appear between the and the Thus the two patterns \nmatch exactly the same set of strings. Because alternative branches are tried from left to right and options are not reset until the end of the subpattern is reached an option setting in one branch does affect subsequent branches so the above patterns match SUNDAY as well as Saturday \n"});
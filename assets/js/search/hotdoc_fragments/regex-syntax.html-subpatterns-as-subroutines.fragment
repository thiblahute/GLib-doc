fragment_downloaded_cb({"url": "regex-syntax.html#subpatterns-as-subroutines", "fragment": "Subpatterns as subroutines \nIf the syntax for a recursive subpattern reference either by number or by name is used outside the parentheses to which it refers it operates like a subroutine in a programming language. The called subpattern may be defined before or after the reference. An earlier example pointed out that the pattern \nmatches sense and sensibility and response and responsibility but not sense and responsibility If instead the pattern \nis used it does match sense and responsibility as well as the other two strings. Another example is given in the discussion of DEFINE above. \nLike recursive subpatterns a subroutine call is always treated as an atomic group. That is once it has matched some of the string it is never re entered even if it contains untried alternatives and there is a subsequent matching failure. \nWhen a subpattern is used as a subroutine processing options such as case independence are fixed when the subpattern is defined. They cannot be changed for different calls. For example consider this pattern \nIt matches abcabc It does not match abcABC because the change of processing option does not affect the called subpattern. \n"});
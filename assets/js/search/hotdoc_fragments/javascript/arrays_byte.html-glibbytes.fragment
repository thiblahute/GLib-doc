fragment_downloaded_cb({"url": "javascript/arrays_byte.html#glibbytes", "fragment": "GLib.Bytes \nA simple refcounted data type representing an immutable sequence of zero or more bytes from an unspecified origin. \nThe purpose of a GLib.Bytes is to keep the memory region that it holds alive for as long as anyone holds a reference to the bytes. When the last reference count is dropped the memory is released. Multiple unrelated callers can use byte data in the GLib.Bytes without coordinating their activities resting assured that the byte data will not change or move while they hold a reference. \nA GLib.Bytes can come from many different origins that may have different procedures for freeing the memory region. Examples are memory from GLib.prototype.malloc from memory slices from a GLib.MappedFile or memory from other allocators. \nGLib.Bytes work well as keys in GLib.HashTable. Use GLib.Bytes.prototype.equal and GLib.Bytes.prototype.hash as parameters to g_hash_table_new not introspectable or g_hash_table_new_full not introspectable GLib.Bytes can also be used as keys in a GLib.Tree by passing the GLib.Bytes.prototype.compare function to g_tree_new not introspectable \nThe data pointed to by this bytes must not be modified. For a mutable array of bytes see GLib.ByteArray. Use GLib.Bytes.prototype.unref_to_array to create a mutable array for a GLib.Bytes sequence. To create an immutable GLib.Bytes from a mutable GLib.ByteArray use the GLib.prototype.byte_array_free_to_bytes function. \n"});
fragment_downloaded_cb({"url": "javascript/threads.html#glibcondprototypewait", "fragment": "GLib.Cond.prototype.wait \nAtomically releases mutex and waits until cond is signalled. When this function returns mutex is locked again and owned by the calling thread. \nWhen using condition variables it is possible that a spurious wakeup may occur ie GLib.Cond.prototype.wait returns even though GLib.Cond.prototype.signal was not called It s also possible that a stolen wakeup may occur. This is when GLib.Cond.prototype.signal is called but another thread acquires mutex before this thread and modifies the state of the program in such a way that when GLib.Cond.prototype.wait is able to return the expected condition is no longer met. \nFor this reason GLib.Cond.prototype.wait must always be used in a loop. See the documentation for GLib.Cond for a complete example. \n"});
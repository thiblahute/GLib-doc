fragment_downloaded_cb({"url": "javascript/iochannels.html#g_io_channel_unix_new", "fragment": "GLib.IOChannel.prototype.unix_new \nCreates a new GLib.IOChannel given a file descriptor. On UNIX systems this works for plain files pipes and sockets. \nThe returned GLib.IOChannel has a reference count of \nThe default encoding for GLib.IOChannel is UTF If your application is reading output from a command using via pipe you may need to set the encoding to the encoding of the current locale see GLib.prototype.get_charset with the GLib.IOChannel.prototype.set_encoding function. \nIf you want to read raw binary data without interpretation then call the GLib.IOChannel.prototype.set_encoding function with null for the encoding argument. \nThis function is available in GLib on Windows too but you should avoid using it on Windows. The domain of file descriptors and sockets overlap. There is no way for GLib to know which one you mean in case the argument you pass to this function happens to be both a valid file descriptor and socket. If that happens a warning is issued and GLib assumes that it is the file descriptor you mean. \n"});
fragment_downloaded_cb({"url": "javascript/regex-syntax.html#unicode-character-properties", "fragment": "Unicode character properties \nTo support generic character types there are three additional escape sequences they are \nThe property names represented by xx above are limited to the Unicode script names the general category properties and Any which matches any character including newline Other properties such as InMusicalSymbols are not currently supported. Note that P Any does not match any characters so always causes a match failure. \nSets of Unicode characters are defined as belonging to certain scripts. A character from one of these sets can be matched using a script name. For example p Greek or P Han \nThose that are not part of an identified script are lumped together as Common The current list of scripts can be found in the documentation for the GUnicodeScript enumeration. Script names for use with p can be found by replacing all spaces with underscores e.g. for Linear B use p Linear_B \nEach character has exactly one general category property specified by a two letter abbreviation. For compatibility with Perl negation can be specified by including a circumflex between the opening brace and the property name. For example p Lu is the same as P Lu \nIf only one letter is specified with p or P it includes all the general category properties that start with that letter. In this case in the absence of negation the curly brackets in the escape sequence are optional these two examples have the same effect \nIn addition to the two letter category codes listed in the documentation for the GUnicodeType enumeration the following general category property codes are supported \nThe special property L is also supported it matches a character that has the Lu Ll or Lt property in other words a letter that is not classified as a modifier or other \nThe long synonyms for these properties that Perl supports such as ep Letter are not supported by GRegex nor is it permitted to prefix any of these properties with Is \nNo character that is in the Unicode table has the Cn unassigned property. Instead this property is assumed for any code point that is not in the Unicode table. \nSpecifying caseless matching does not affect these escape sequences. For example p Lu always matches only upper case letters. \nThe X escape matches any number of Unicode characters that form an extended Unicode sequence. X is equivalent to \nThat is it matches a character without the mark property followed by zero or more characters with the mark property and treats the sequence as an atomic group see below Characters with the mark property are typically accents that affect the preceding character. \nMatching characters by Unicode property is not fast because GRegex has to search a structure that contains data for over fifteen thousand characters. That is why the traditional escape sequences such as d and w do not use Unicode properties. \n"});